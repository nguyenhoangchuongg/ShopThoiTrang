/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import DAO.ChiTietHoaDonXuatDAO;
import DAO.GioHangDAO;
import DAO.KhachHangDAO;
import DAO.SanPhamDAO;
import Helper.Auth;
import Helper.MsgBox;
import Model.ChiTietHoaDonXuat;
import Model.SanPham;
import Model.GioHang;
import Model.HoaDonXuat;
import Model.KhachHang;
import java.util.List;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vutai
 */
public class GioHangUI extends javax.swing.JPanel {

    /**
     * Creates new form GioHang
     */
    GioHangDAO ghdao = new GioHangDAO();
    KhachHangDAO khd = new KhachHangDAO();
    GioHangDAO dao = new GioHangDAO();
    int row = -1;
    int index = -1;

    public GioHangUI() {
        initComponents();
        this.load();
        load();
    }

//    void checktong() {
//        KhachHang kh = khd.selecttkkhbyid(Auth.USER.getTenTK());
//        List<GioHang> hd = dao.select(kh.getMaKH());
//        if (chkSelectAll.isSelected()) {
//            for (int i = 0; i < hd.size(); i++) {
//                hd.get(i).setCheck(true);
//                if (hd.get(i).isCheck()) {
//                    tblGioHang.setValueAt(true, i, 6);
//                }
//            }
//        } else {
//
//            for (int i = 0; i < hd.size(); i++) {
//                hd.get(i).setCheck(false);
//                if (!hd.get(i).isCheck()) {
//                    tblGioHang.setValueAt(false, i, 6);
//                }
//            }
//
//        }
//
//    }
//
//    void check() {
//        KhachHang kh = khd.selecttkkhbyid(Auth.USER.getTenTK());
//        int in = tblGioHang.getRowCount();
//        int b = 0;
//        boolean a = false;
//        List<GioHang> hd = dao.select(kh.getMaKH());
//        for (int i = 0; i < hd.size()-1; i++) {
//            hd.get(i).setCheck((boolean) tblGioHang.getValueAt(i, 6));
//            if (hd.get(i).isCheck()) {
//                a = true;
//                b++;
//            } else {
//                a = false;
//            }
//        }
//        if (a == true && b == in) {
//            chkSelectAll.setSelected(true);
//        } else {
//            chkSelectAll.setSelected(false);
//        }
//    }
    void delete1() {
        KhachHang kh = khd.selecttkkhbyid(Auth.USER.getTenTK());
        int in = tblGioHang.getRowCount();
        boolean a = false;
        List<GioHang> hd = dao.select(kh.getMaKH());
        boolean b = false;
//        for (int row : tblGioHang.getSelectedRows()) {
//            b = (boolean) tblGioHang.getValueAt(row, 6);
//        }
//        if (chkSelectAll.isSelected()) {
//            b = true;
//        }
//        if (b == false) {
//            MsgBox.alert(this, "Bạn chưa chọn hóa đơn để xóa");
//        } else {
//        for (int i = 0; i < hd.size(); i++) {
//            hd.get(i).setCheck((boolean) tblGioHang.getValueAt(i, 6));
//            System.out.println(i);
//            if (hd.get(i).isCheck()) {
        int ma = (Integer) tblGioHang.getValueAt(index, 0);
        dao.delete12(ma);
        index = -1;
//            }
//        }

        MsgBox.alert(this, "Bạn đã sản phẩm khỏi giỏ hàng thành công");
//        }
//        chkSelectAll.setSelected(false);
        this.load();
    }

    void delete() {
        int ma = -1;
        List<GioHang> gh = dao.selectAll();
        for (int i = 0; i < gh.size() - 1; i++) {
            ma = gh.get(index).getMahoadon();
        }
//        dao.delete12(ma);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGioHang = new javax.swing.JTable();
        btnXoa = new javax.swing.JButton();
        btnThanhToan = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        tblGioHang.setBackground(new java.awt.Color(204, 204, 204));
        tblGioHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã Hàng", "Mã Sản Phẩm", "Tên Sản Phẩm", "Giá Bán", "Số Lượng", "Tổng Tiền"
            }
        ));
        tblGioHang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGioHangMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblGioHangMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblGioHang);

        btnXoa.setText("Xóa khỏi Giỏ Hàng");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThanhToan.setText("Thanh Toán");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXoa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnThanhToan)
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Giỏ Hàng");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(17, 604, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblGioHangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGioHangMouseClicked
//        if (evt.getClickCount() == 2) {
//            index = tblGioHang.rowAtPoint(evt.getPoint());
//            System.out.println(index);
//        }else{
//            
//        }

    }//GEN-LAST:event_tblGioHangMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed

        if (index != -1) {
            delete1();
        } else {
            MsgBox.alert(this, "Bạn Chưa Chọn Sản Phẩm Để Xóa");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tblGioHangMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGioHangMousePressed

        index = tblGioHang.rowAtPoint(evt.getPoint());
        System.out.println(index);

    }//GEN-LAST:event_tblGioHangMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblGioHang;
    // End of variables declaration//GEN-END:variables

    private void load() {
        DefaultTableModel tblmodel = (DefaultTableModel) tblGioHang.getModel();
        tblmodel.setRowCount(0);
        KhachHang kh = khd.selecttkkhbyid(Auth.USER.getTenTK());
        try {
            List<GioHang> gh = ghdao.select(kh.getMaKH());
            for (GioHang list : gh) {
                Object[] row = {
                    list.getMahoadon(),
                    list.getMaSP(),
                    list.getTenSP(),
                    list.getGiaban(),
                    list.getSoluong(),
                    list.getTongtien(),};
                tblmodel.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn");
            e.printStackTrace();
        }
    }

}
