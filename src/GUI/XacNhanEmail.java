/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package GUI;

import DAO.KhachHangDAO;
import DAO.TaiKhoanDAO;
import Helper.MsgBox;
import Model.KhachHang;
import Model.TaiKhoan;
import java.util.List;
import java.util.Properties;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JOptionPane;

/**
 *
 * @author vutai
 */
public class XacNhanEmail extends javax.swing.JDialog {

    /**
     * Creates new form XacNhanEmail
     */
    int randomNumber;
    String to;
    TaiKhoanDAO tk = new TaiKhoanDAO();
    KhachHangDAO khd = new KhachHangDAO();
    int counter = 10;

    public XacNhanEmail(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnsendcode = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        txttaikhoan = new com.da1.CustomControl.TextField11();
        txtcode = new com.da1.CustomControl.TextField11();
        timeleft = new javax.swing.JLabel();
        txtemail = new com.da1.CustomControl.TextField11();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Quên Mật Khẩu");

        btnsendcode.setText("Gửi Mã");
        btnsendcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsendcodeActionPerformed(evt);
            }
        });

        jButton2.setText("Xác Nhận");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Hủy");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txttaikhoan.setBackground(new java.awt.Color(204, 204, 204));
        txttaikhoan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txttaikhoan.setLabelText("Tên Tài Khoản");
        txttaikhoan.setMargin(new java.awt.Insets(1, 1, 1, 1));

        txtcode.setBackground(new java.awt.Color(204, 204, 204));
        txtcode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtcode.setLabelText("Code");
        txtcode.setMargin(new java.awt.Insets(1, 1, 1, 1));

        timeleft.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        timeleft.setForeground(new java.awt.Color(255, 51, 51));

        txtemail.setBackground(new java.awt.Color(204, 204, 204));
        txtemail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtemail.setLabelText("Email");
        txtemail.setMargin(new java.awt.Insets(1, 1, 1, 1));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtcode, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnsendcode)
                                .addGap(18, 18, 18)
                                .addComponent(timeleft, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txttaikhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(117, 117, 117))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txttaikhoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtcode, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnsendcode))
                    .addComponent(timeleft, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnsendcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsendcodeActionPerformed
        check();
    }//GEN-LAST:event_btnsendcodeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        changepass();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        DangNhap dn = new DangNhap();
        dn.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(XacNhanEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(XacNhanEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(XacNhanEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(XacNhanEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                XacNhanEmail dialog = new XacNhanEmail(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnsendcode;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel timeleft;
    private com.da1.CustomControl.TextField11 txtcode;
    private com.da1.CustomControl.TextField11 txtemail;
    private com.da1.CustomControl.TextField11 txttaikhoan;
    // End of variables declaration//GEN-END:variables

    void init() {
        this.setLocationRelativeTo(null);
        this.setTitle("Quên Mật Khẩu");
    }

    public void sendmail() {
        try {
            Properties p = new Properties();
            p.put("mail.smtp.auth", "true");
            p.put("mail.smtp.starttls.enable", "true");
            p.put("mail.smtp.host", "smtp.gmail.com");
            p.put("mail.smtp.port", 587);
            String name = "nhaofbaoshop@gmail.com";
            String pass = "yawsohgplqputmkr";
            Session s = Session.getInstance(p,
                    new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(name, pass);
                }
            });

            String from = "nhaofbaoshop@gmail.com";
            to = txtemail.getText();
            String subject = "Code Của Bạn Là: ";
            String body = "Here is the code to reset your password: "+randomNumber + " \nPlease ignore if you don't place a request \nNhaofbao Shop!";
            Message msg = new MimeMessage(s);
            msg.setFrom(new InternetAddress(from));
            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
            msg.setSubject(subject);
            msg.setText(body);
            MimeBodyPart textPart = new MimeBodyPart();
            textPart.setContent(body, "text/plain");
            Multipart mp = new MimeMultipart();
            mp.addBodyPart(textPart);

            msg.setContent(mp);
            Transport.send(msg);
            JOptionPane.showMessageDialog(null, "Kiểm Tra Email Và Lấy Code", "Message",
                    javax.swing.JOptionPane.INFORMATION_MESSAGE);
        } catch (MessagingException ex) {
            Logger.getLogger(QMK.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void check() {

        if (checkemai()) {

            List<TaiKhoan> listtk = tk.selectAll();
            randomNumber = (int) (Math.random() * 9999);
            if (randomNumber <= 1000) {
                randomNumber = randomNumber + 1000;
            }
            sendmail();
            txtcode.requestFocus();
            btnsendcode.setEnabled(false);
            Timer timer = new Timer();
            counter = 60;
            TimerTask task = new TimerTask() {
                public void run() {
                    timeleft.setText(Integer.toString(counter) + "S");
                    counter--;
                    if (counter == -1) {

                        timer.cancel();
                        btnsendcode.setEnabled(true);
                        timeleft.setText("");
                    }

                }
            };
            timer.scheduleAtFixedRate(task, 1000, 1000);
            

        }

    }

    public void changepass() {
        if (checkcode() || checkemai()) {
            int code = Integer.parseInt(txtcode.getText());
            if (randomNumber == code) {
                QMK qmk = new QMK(txtemail.getText());
                qmk.setVisible(true);
                this.dispose();
            } else {
                MsgBox.alert(this, "Code Không Đúng Vui Lòng Kiểm Tra Lại!!!");
            }
        }

    }
    public boolean checkcode(){
        if (txtcode.getText().isEmpty()) {
            MsgBox.alert(this, "Bạn Chưa Nhập Code");
            return false;
        }
        return true;
    }
    public boolean checkemai() {

        List<KhachHang> listkh = khd.selectAll();
        if (txttaikhoan.getText().isEmpty()) {
            MsgBox.alert(this, "Tên Tài Khoản Không Được Để Trống");
            return false;

        }
        if (txtemail.getText().isEmpty()) {
            MsgBox.alert(this, "Email Không Được Để Trống");
            return false;

        }

        boolean check = true;
        boolean check1 = true;
        boolean check2 = true;
        for (int i = 0; i < listkh.size(); i++) {
            if (!listkh.get(i).getTenTK().equalsIgnoreCase(txttaikhoan.getText())) {
                check = false;
            } else {
                check = true;
                break;
            }
        }
         if (!check) {
            MsgBox.alert(this, "Tài Khoản Không Tồn Tài Trong Hệ Thống");
            return false;
        }
         for (int i = 0; i < listkh.size(); i++) {
            if (!listkh.get(i).getEmail().equalsIgnoreCase(txtemail.getText())) {
                check2 = false;
            } else {
                check2 = true;
                break;
            }
        }
        if (!check2) {
            MsgBox.alert(this, "Email Không Tồn Tài Trong Hệ Thống");
            return false;
        }
        for (int i = 0; i < listkh.size(); i++) {
            if (listkh.get(i).getEmail().equalsIgnoreCase(txtemail.getText()) && listkh.get(i).getTenTK().equalsIgnoreCase(txttaikhoan.getText())) {
                check1 = true;
                break;

            } else {
                check1 = false;
            }
        }
        if (!check1) {
            MsgBox.alert(this, "Ban Nhap Sai Email, Xin Hãy Thử Lại");
            return false;
        }

        
        return true;

    }

}
