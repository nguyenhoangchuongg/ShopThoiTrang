/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import DAO.KhachHangDAO;
import DAO.TaiKhoanDAO;
import Helper.MsgBox;
import Model.KhachHang;
import Model.NhanVien;
import Model.TaiKhoan;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ADMIN
 */
public class khachHang extends javax.swing.JPanel {

    /**
     * Creates new form JPkhachHang
     */
    int index = 0;
    KhachHangDAO nvd = new KhachHangDAO();
    TaiKhoanDAO tkd = new TaiKhoanDAO();

    public khachHang() {
        initComponents();
        init();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tabkh = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        btnmoi = new javax.swing.JButton();
        btnthem = new javax.swing.JButton();
        btnxoa = new javax.swing.JButton();
        btnsua = new javax.swing.JButton();
        btncuoi = new javax.swing.JButton();
        btnpre = new javax.swing.JButton();
        btnnext = new javax.swing.JButton();
        btndau = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txttenkh = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        txttentk = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtmakh = new javax.swing.JTextField();
        txtsdt = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtdiachi = new javax.swing.JTextArea();
        rdonu = new javax.swing.JRadioButton();
        rdonam = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        txtmatkh = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKhachhang = new javax.swing.JTable();
        tbltk = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 204, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabkh.setBackground(new java.awt.Color(255, 255, 255));
        tabkh.setForeground(new java.awt.Color(0, 51, 0));
        tabkh.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        btnmoi.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnmoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Add-icon.png"))); // NOI18N
        btnmoi.setText("Mới");
        btnmoi.setFocusPainted(false);
        btnmoi.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnmoi.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnmoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmoiActionPerformed(evt);
            }
        });

        btnthem.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnthem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Plus-icon.png"))); // NOI18N
        btnthem.setText("Thêm");
        btnthem.setFocusPainted(false);
        btnthem.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnthem.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnthem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnthemActionPerformed(evt);
            }
        });

        btnxoa.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnxoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Minu-icon.png"))); // NOI18N
        btnxoa.setText("Xóa");
        btnxoa.setFocusPainted(false);
        btnxoa.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnxoa.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnxoaActionPerformed(evt);
            }
        });

        btnsua.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        btnsua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/refresh-icon.png"))); // NOI18N
        btnsua.setText("Sửa");
        btnsua.setFocusPainted(false);
        btnsua.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnsua.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnsua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsuaActionPerformed(evt);
            }
        });

        btncuoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/First-icon.png"))); // NOI18N
        btncuoi.setFocusPainted(false);
        btncuoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncuoiActionPerformed(evt);
            }
        });

        btnpre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/pre-Music-icon.png"))); // NOI18N
        btnpre.setFocusPainted(false);
        btnpre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpreActionPerformed(evt);
            }
        });

        btnnext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Next-Music-icon.png"))); // NOI18N
        btnnext.setFocusPainted(false);
        btnnext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnextActionPerformed(evt);
            }
        });

        btndau.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Last-icon.png"))); // NOI18N
        btndau.setFocusPainted(false);
        btndau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndauActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel2.setText("Mã KH");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel3.setText("Họ và tên");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel4.setText("Số ĐT");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel5.setText("Giới tính");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel6.setText("Địa chỉ");

        txttenkh.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txttenkh.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        txtemail.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txtemail.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtemail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtemailActionPerformed(evt);
            }
        });

        txttentk.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txttentk.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel8.setText("Email");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel9.setText("Tên tài khoản");

        txtmakh.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txtmakh.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        txtsdt.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txtsdt.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtsdt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsdtActionPerformed(evt);
            }
        });

        txtdiachi.setColumns(20);
        txtdiachi.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txtdiachi.setRows(5);
        jScrollPane2.setViewportView(txtdiachi);

        rdonu.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(rdonu);
        rdonu.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        rdonu.setText("Nữ");
        rdonu.setFocusPainted(false);
        rdonu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdonuActionPerformed(evt);
            }
        });

        rdonam.setBackground(new java.awt.Color(204, 204, 204));
        buttonGroup1.add(rdonam);
        rdonam.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        rdonam.setText("Nam");
        rdonam.setFocusPainted(false);
        rdonam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdonamActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        jLabel10.setText("Mật khẩu");

        txtmatkh.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        txtmatkh.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(rdonam)
                                .addGap(18, 18, 18)
                                .addComponent(rdonu)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(btncuoi, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnpre, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(btnnext, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(btndau, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(96, 96, 96)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(btnsua, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(btnxoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btnthem)))
                                            .addComponent(btnmoi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txttenkh, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtsdt, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtmakh, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(67, 67, 67)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel10)
                                                    .addComponent(jLabel9))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txttentk, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtmatkh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(206, 709, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtmakh, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txttenkh, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtsdt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txttentk, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtmatkh, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rdonu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rdonam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btncuoi, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnpre, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnnext, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btndau, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnmoi)
                        .addGap(18, 18, 18)
                        .addComponent(btnthem)
                        .addGap(18, 18, 18)
                        .addComponent(btnxoa)
                        .addGap(18, 18, 18)
                        .addComponent(btnsua)))
                .addGap(48, 48, 48))
        );

        tabkh.addTab("Cập nhật thông tin", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        tblKhachhang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã KH", "Tên KH", "Tên Tài Khoản", "Số DT", "Địa Chỉ", "Giới Tính", "Email"
            }
        ));
        tblKhachhang.setMaximumSize(new java.awt.Dimension(214, 80));
        tblKhachhang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhachhangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblKhachhang);

        tbltk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Tên Tài Khoản", "Mật Khẩu", "Vai Trò"
            }
        ));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 758, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addGap(8, 8, 8)
                    .addComponent(tbltk, javax.swing.GroupLayout.PREFERRED_SIZE, 747, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(15, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(tbltk, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        tabkh.addTab("Danh sách khách hàng", jPanel4);

        add(tabkh, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 440));

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void txtemailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtemailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtemailActionPerformed

    private void txtsdtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsdtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsdtActionPerformed

    private void rdonuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdonuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdonuActionPerformed

    private void rdonamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdonamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdonamActionPerformed

    private void btncuoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncuoiActionPerformed
        this.index = 0;
        this.edit();
    }//GEN-LAST:event_btncuoiActionPerformed

    private void tblKhachhangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhachhangMouseClicked
        if (evt.getClickCount() == 1) {
            this.index = tblKhachhang.rowAtPoint(evt.getPoint());
            if (this.index >= 0) {
                this.edit();
                tabkh.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_tblKhachhangMouseClicked

    private void btnpreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpreActionPerformed
        if (this.index == 0) {
            this.index = tblKhachhang.getRowCount() - 1;
            this.edit();
        } else {
            this.index--;
            this.edit();
        }
    }//GEN-LAST:event_btnpreActionPerformed

    private void btnnextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnextActionPerformed
        if (this.index == tblKhachhang.getRowCount() - 1) {
            index = 0;
            edit();
        } else {
            this.index++;
            this.edit();
        }
    }//GEN-LAST:event_btnnextActionPerformed

    private void btndauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndauActionPerformed
        this.index = tblKhachhang.getRowCount() - 1;
        this.edit();
    }//GEN-LAST:event_btndauActionPerformed

    private void btnmoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmoiActionPerformed
        clear();
        txtmakh.setEditable(true);
        txttentk.setEditable(true);
    }//GEN-LAST:event_btnmoiActionPerformed

    private void btnthemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnthemActionPerformed
        check();
        if (flag == true) {
            insert();
        }
    }//GEN-LAST:event_btnthemActionPerformed

    private void btnxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnxoaActionPerformed
        delete();
    }//GEN-LAST:event_btnxoaActionPerformed

    private void btnsuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsuaActionPerformed
        update();
    }//GEN-LAST:event_btnsuaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btncuoi;
    private javax.swing.JButton btndau;
    private javax.swing.JButton btnmoi;
    private javax.swing.JButton btnnext;
    private javax.swing.JButton btnpre;
    private javax.swing.JButton btnsua;
    private javax.swing.JButton btnthem;
    private javax.swing.JButton btnxoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rdonam;
    private javax.swing.JRadioButton rdonu;
    private javax.swing.JTabbedPane tabkh;
    private javax.swing.JTable tblKhachhang;
    private javax.swing.JTable tbltk;
    private javax.swing.JTextArea txtdiachi;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtmakh;
    private javax.swing.JTextField txtmatkh;
    private javax.swing.JTextField txtsdt;
    private javax.swing.JTextField txttenkh;
    private javax.swing.JTextField txttentk;
    // End of variables declaration//GEN-END:variables

    void init() {
//        setIconImage(XImage.APP_ICON);
        loadnv();
        loadtk();
        this.setStatus(true);
        btnthem.setEnabled(false);

    }

    private void loadnv() {
        DefaultTableModel model = (DefaultTableModel) tblKhachhang.getModel();
        model.setRowCount(0);
        try {
            List<KhachHang> listnv = nvd.selectAll();
            for (KhachHang nv : listnv) {
                Object[] row = {
                    nv.getMaKH(),
                    nv.getTenKH(),
                    nv.getTenTK(),
                    nv.getSoDienThoai(),
                    nv.getDiaChi(),
                    nv.isGioiTinh() ? "Nữ" : "Nam",
                    nv.getEmail(),};
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi Kiểm Tra Dữ Liệu!");
            System.out.println(e);
        }
    }

    private void loadtk() {
        DefaultTableModel model = (DefaultTableModel) tbltk.getModel();
        model.setRowCount(0);
        try {
            List<TaiKhoan> listtk = tkd.selectAll();
            for (TaiKhoan tk : listtk) {
                Object[] row = {
                    tk.getTenTK(),
                    tk.getMatKhau()
                };
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi Kiểm Tra Dữ Liệu!");
            System.out.println(e);
        }
    }

    private void edit() {
        try {
            Integer manv = (Integer) tblKhachhang.getValueAt(this.index, 0);
            String tentk = (String) tblKhachhang.getValueAt(this.index, 2);
            KhachHang modelnv = nvd.selectById(manv);
            TaiKhoan modeltk = tkd.selectById(tentk);
            if (modelnv != null && modeltk != null) {
                this.setModel(modelnv, modeltk);
                setStatus(false);
            }

        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi");
            System.out.println(e);
        }
    }

    private void setStatus(boolean insertable) {
        btnthem.setEnabled(insertable);
        btnsua.setEnabled(!insertable);
        btnxoa.setEnabled(!insertable);
        boolean first = this.index > 0;
        boolean last = this.index < tblKhachhang.getRowCount() - 1;
        btncuoi.setEnabled(!insertable && first);
        btnpre.setEnabled(!insertable && first);
        btnnext.setEnabled(!insertable && last);
        btndau.setEnabled(!insertable && last);
    }

    private void setModel(KhachHang modelnv, TaiKhoan modeltk) {
        txtmakh.setText(modelnv.getMaKH() + "");
        txttenkh.setText(modelnv.getTenKH());
        txtsdt.setText(modelnv.getSoDienThoai());
        txtemail.setText(modelnv.getEmail());
        txtdiachi.setText(modelnv.getDiaChi());
        txttentk.setText(modeltk.getTenTK());
        String gt = modelnv.isGioiTinh() ? "Nữ" : "Nam";
        if (gt.equalsIgnoreCase("Nam")) {
            rdonam.setSelected(true);
        } else {
            rdonu.setSelected(true);
        }
        txttentk.setText(modeltk.getTenTK());
        txtmatkh.setText(modeltk.getMatKhau());
    }

    private KhachHang getModelnv() {
        KhachHang model = new KhachHang();
        model.setMaKH(Integer.parseInt(txtmakh.getText()));
        model.setTenKH(txttenkh.getText());
        model.setSoDienThoai(txtsdt.getText());
        model.setGioiTinh(rdonam.isSelected());
        model.setDiaChi(txtdiachi.getText());
        model.setEmail(txtemail.getText());
        model.setTenTK(txttentk.getText());
        return model;
    }

    private TaiKhoan getModeltk() {
        TaiKhoan model = new TaiKhoan();
        model.setTenTK(txttentk.getText());
        model.setMatKhau(txtmatkh.getText());
        model.setVaiTro("Khách hàng");
        return model;
    }

    private void insert() {
        KhachHang modelnv = getModelnv();
        TaiKhoan modeltk = getModeltk();
//        if (!isValidate(model)) {
//            return;
//        }
        try {
            tkd.insert(modeltk);
            nvd.insert(modelnv);

            this.loadtk();
            this.loadnv();

            this.clear();
            MsgBox.alert(this, "Thêm Nhân Viên Thành Công!");
        } catch (Exception e) {
            MsgBox.alert(this, "Thêm Nhân Viên Thất Bại!");
            System.out.println(e);
        }
    }

    private void update() {
        KhachHang modelnv = getModelnv();
        TaiKhoan modeltk = getModeltk();
        try {
            tkd.update(modeltk);
            nvd.update(modelnv);
            this.loadtk();
            this.loadnv();
            MsgBox.alert(this, "Cập Nhật Nhân Viên Thành Công!");
        } catch (Exception e) {
            MsgBox.alert(this, "Cập Nhật Nhân Viên Thất Bại!");
            System.out.println(e);
        }
    }

    private void delete() {
//        if (!Auth.isManager()) {
//            msgbox.alert(this, "Bạn Không Có Quyền Xóa Chuyên Đề!");
//        } else 
        if (MsgBox.confirm(this, "Bạn Có Muốn Xóa Không?")) {
            Integer manv = Integer.parseInt(txtmakh.getText());
            String tk = txtsdt.getText();
            try {

                nvd.delete(manv);
                this.loadtk();
                this.loadnv();
                this.clear();
                MsgBox.alert(this, "Xóa Nhân Viên Thành Công!");
            } catch (Exception e) {
                MsgBox.alert(this, "Xóa Nhân Viên Thất Bại!");
                System.out.println(e);
            }
        }
    }

    private void clear() {
        this.setModel(new KhachHang(), new TaiKhoan());
        this.setStatus(true);
    }
    private static final String EMAIL_PATTERN
            = "/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/";

    public static boolean verifyEmail(String email) {
        if (email == null) {
            return false;
        }
        return email.matches(EMAIL_PATTERN);
    }
    boolean flag = false;

    void check() {
        KhachHang kh = getModelnv();
        TaiKhoan tk = getModeltk();

        if (txtmakh.getText().length() == 0) {
            MsgBox.alert(this, "Mã khách hàng không được để trống");

        } else if (txtmakh.getText().matches("^[a-zA-Z_-]{1,15}$")) {
            MsgBox.alert(this, "Mã khách hàng phải là số");
        } else if (txtmakh.getText().equals(kh.getMaKH())) {
            MsgBox.alert(this, "Mã khách hàng đã tồn tại");
        } else if (txttenkh.getText().length() == 0) {
            MsgBox.alert(this, "Tên khách hàng không được để trống");
        } else if (txtsdt.getText().length() < 10 || txtsdt.getText().length() > 11) {
            MsgBox.alert(this, "Số điện thoại phải nhập đủ 10 số");
        } else if (!rdonam.isSelected() && !rdonu.isSelected()) {
            MsgBox.alert(this, "Không được để trống giới tính");
        } else if (txtdiachi.getText().length() == 0) {
            MsgBox.alert(this, "Không được để trống địa chỉ");
        } else if (txtemail.getText().length() == 0) {
            MsgBox.alert(this, "Không được để trống email");
        } else if (verifyEmail(txtemail.getText())) {
            MsgBox.alert(this, "Email không đúng định dạng");
        } else if (txttentk.getText().length() == 0) {
            MsgBox.alert(this, "Không được để trống tên tài khoản");
        } else if (txttentk.getText().equals(tk.getTenTK())) {
            MsgBox.alert(this, "Tên tài khoản đã tồn tại");
        } else if (txtmatkh.getText().length() == 0) {
            MsgBox.alert(this, "Không được để trống tài khoản");
        } else if (txtmatkh.getText().length() < 5 || txtmatkh.getText().length() > 30) {
            MsgBox.alert(this, "Mật khẩu có độ dài từ 5 đến 30 ký tự");
        } else {
            flag = true;
        }
//            else if ((txttenkh.getText()).equals("")) {
//                MsgBox.alert(this, "Họ tên không được để trống");
//            } else if (txttenkh.getText().matches("[a-zA-Z][a-zA-Z ]+")) {
//                MsgBox.alert(this, "Họ tên chỉ chứa alphabet và ký tự trắng");
//            } else if (txtsdt.getText().equals("")) {
//                MsgBox.alert(this, "Số điện thoại không được để trống");
//            } else if (txtsdt.getText().length() < 10 || txtsdt.getText().length() > 12) {
//                MsgBox.alert(this, "Số điện thoại phải nhập đủ 10 hoặc 11 số.");
//            } else if (!txtsdt.getText().matches("[0-9]+")) {
//                MsgBox.alert(this, "Số điện thoại chỉ nhập số");
//            } else if (txtemail.getText().equals("")) {
//                MsgBox.alert(this, "Email không đươc để trống");
//            } else if (verifyEmail(txtemail.getText()) == false) {
//                MsgBox.alert(this, "Định dạng email bạn nhập không chính xác");
//            } else if (txtdiachi.getText().equals("")) {
//                MsgBox.alert(this, "Email không đươc để trống");
//            } else if (txttentk.getText().equals("")) {
//                MsgBox.alert(this, "Email không đươc để trống");
//            } else if (txtmatkh.getText().equals("")) {
//                MsgBox.alert(this, "Email không đươc để trống");
//            }
//        }

    }
}
